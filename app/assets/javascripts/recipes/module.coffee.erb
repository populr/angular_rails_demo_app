recipeModule = angular.module('recipeModule', ['ngResource'])

recipeModule.config ['$httpProvider', ($httpProvider) ->
  $httpProvider.defaults.headers['common']['Accept'] = 'application/json'
  token = $("meta[name='csrf-token']").attr 'content'
  $httpProvider.defaults.headers['common']['X-CSRF-Token'] = token
]

recipeModule.config ['$routeProvider', ($routeProvider) ->
  $routeProvider.
      when('/recipes', templateUrl: '<%= asset_path('recipes/index.html') %>', controller: @RecipesCtrl).
      when('/recipes/new', templateUrl: '<%= asset_path('recipes/new.html') %>', controller: @NewRecipeCtrl).
      otherwise(redirectTo: '/recipes')
]


recipes = ($resource) ->
  $resource '/recipes/:id', {}, {
                                  index:   { method: 'GET', isArray: true },
                                  show:    { method: 'GET' },
                                  create:  { method: 'POST' },
                                  update:  { method: 'PUT' },
                                  destroy: { method: 'DELETE' }
                                }
recipeModule.factory 'Recipe', ['$resource', recipes ]


ingredients = ($resource) ->
  $resource '/ingredients/:id', {}, {
                                  index:   { method: 'GET', isArray: true },
                                  show:    { method: 'GET' },
                                  create:  { method: 'POST' },
                                  update:  { method: 'PUT' },
                                  destroy: { method: 'DELETE' }
                                }
recipeModule.factory 'Ingredient', ['$resource', ingredients ]




recipeModule.directive 'suggestIngredient', () ->
  link: (scope, el, attrs) ->
    setTimeout ->
      el.typeahead
        source: scope.existing_ingredients
        mode: 'multiple'

